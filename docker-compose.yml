# docker-compose.yml - Fixed Version

version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus_config:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
    networks:
      - monitoring_net

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: 'YOUR_PASSWORD'
      GF_SERVER_ROOT_URL: 'https://monitoring.adplay-mobile.com'
    restart: unless-stopped
    networks:
      - monitoring_net

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "8088:80"
    volumes:
      - ./nginx_config/default.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    networks:
      - monitoring_net

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox_exporter
    command:
      - '--config.file=/etc/blackbox/config.yml'
    volumes:
      - ./blackbox_config/config.yml:/etc/blackbox/config.yml
    restart: unless-stopped
    networks:
      - monitoring_net

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager_config/config.yml:/config/alertmanager.yml
    command:
      - '--config.file=/config/alertmanager.yml'
    restart: unless-stopped
    networks:
      - monitoring_net

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki_config/loki-config.yml:/etc/loki/loki-config.yml
      - ./loki_data:/loki
    command:
      - '-config.file=/etc/loki/loki-config.yml'
    restart: unless-stopped
    networks:
      - monitoring_net

  graph-email-service:
    build:
      context: ./graph_email_service
      dockerfile: Dockerfile
    container_name: graph-email-service
    ports:
      - "8081:8080"  
    environment:
      - NODE_ENV=production
      - PORT=8080
    networks:
      - monitoring_net
    restart: unless-stopped
    depends_on:
      - alertmanager
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail_config/promtail-config.yml:/etc/promtail/promtail-config.yml
      - /var/log:/var/log
    command:
      - '-config.file=/etc/promtail/promtail-config.yml'
    restart: unless-stopped
    networks:
      - monitoring_net

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  monitoring_net:
    driver: bridge